// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement.API.Delivery.INfrastructure.Configuration;

#nullable disable

namespace OrderManagement.API.Delivery.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240122170752_AddMoreFieldsinModels")]
    partial class AddMoreFieldsinModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagement.API.Delivery.INfrastructure.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7948d66-ae41-4a2b-8a41-a5dea5750243"),
                            Address = "Address1",
                            Email = "customer1@email.com",
                            Name = "Customer1",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = new Guid("ab3c1a63-fefa-4934-824b-e4b5201cb84a"),
                            Address = "Address2",
                            Email = "customer2@email.com",
                            Name = "Customer2",
                            PhoneNumber = "9876543210"
                        });
                });

            modelBuilder.Entity("OrderManagement.API.Delivery.INfrastructure.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85185bc1-e2c9-4467-b627-323e24237983"),
                            CreateDate = new DateTime(2024, 1, 22, 20, 37, 52, 377, DateTimeKind.Local).AddTicks(7297),
                            CustomerId = new Guid("f7948d66-ae41-4a2b-8a41-a5dea5750243"),
                            Description = "Order1",
                            TotalAmount = 100.00m
                        },
                        new
                        {
                            Id = new Guid("f136b753-8ddc-4767-b55c-41db32f4020d"),
                            CreateDate = new DateTime(2024, 1, 22, 20, 37, 52, 377, DateTimeKind.Local).AddTicks(7312),
                            CustomerId = new Guid("f7948d66-ae41-4a2b-8a41-a5dea5750243"),
                            Description = "Order2",
                            TotalAmount = 150.50m
                        },
                        new
                        {
                            Id = new Guid("cb6cbbd0-d063-410c-bc69-a921e1ca36de"),
                            CreateDate = new DateTime(2024, 1, 22, 20, 37, 52, 377, DateTimeKind.Local).AddTicks(7314),
                            CustomerId = new Guid("ab3c1a63-fefa-4934-824b-e4b5201cb84a"),
                            Description = "Order3",
                            TotalAmount = 75.25m
                        });
                });

            modelBuilder.Entity("OrderManagement.API.Delivery.INfrastructure.Entities.Order", b =>
                {
                    b.HasOne("OrderManagement.API.Delivery.INfrastructure.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderManagement.API.Delivery.INfrastructure.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
